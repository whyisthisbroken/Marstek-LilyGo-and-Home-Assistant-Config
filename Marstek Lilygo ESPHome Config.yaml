esphome:
  name: marstek
  friendly_name: Marstek Venus E

##THIS CONFIG IS ONLY FOR THE LILYGO T-CAN485, ITS NOT TESTET ON ANY OTHER DEVICE##

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_COMPILER_OPTIMIZATION_PERF: "y"
      CONFIG_ESPTOOLPY_FLASHSIZE_4MB: "y"
      CONFIG_SPIRAM_SUPPORT: "n"
      CONFIG_BT_ENABLED: "n"
      CONFIG_ESPTOOLPY_FLASHMODE_QIO: "y"
      CONFIG_ESPTOOLPY_FLASHFREQ_80M: "y"
      CONFIG_ESP32_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32_ALLOW_RTC_FAST_MEM_AS_HEAP: "y"
      CONFIG_LWIP_TCPIP_RECVMBOX_SIZE: "32"
      CONFIG_LWIP_TCP_MSS: "1436"
      CONFIG_LWIP_TCP_SND_BUF_DEFAULT: "5744"
      CONFIG_LWIP_TCP_WND_DEFAULT: "5744"
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "10"
      CONFIG_UART_ISR_IN_IRAM: "y"
      
logger:
  baud_rate: 0
  level: WARN

api:
  encryption:
    key: !secret api_encryption_key
  batch_delay: 50ms

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  enable_btm: true
  reboot_timeout: 5min
  power_save_mode: none 
  manual_ip:
    static_ip: 192.168.178.160
    gateway: 192.168.178.1
    subnet: 255.255.255.0
    dns1: 192.168.178.220
    dns2: 192.168.178.1

web_server:
  port: 80
  version: 3
  include_internal: false
  local: true
  sorting_groups:
    - id: Info
      name: "Info"
      sorting_weight: -40
    - id: Control
      name: "Control"
      sorting_weight: -30
    - id: Warnings
      name: "Warnungen"
      sorting_weight: -20
    - id: Diagnostic
      name: "Diagnostic"
      sorting_weight: -10

##Time Server Optional, comment if you dont have a Timeserver like Chrony,setup your TimeServer IP!!!##
time:
  - platform: sntp
    id: local_time
    timezone: "Europe/Berlin"
    servers:
      - 192.168.178.250

##You can use Home Assistant for Time sync, just umcomment this section##
#time:
#  - platform: homeassistant
#    id: homeassistant_time

##Pins required for LilyGo T-CAN485 board
output:
  - platform: gpio
    id: ENABLE_PIN # Enable the chip
    pin:
      number: GPIO19
      inverted: true
  - platform: gpio
    id: SE_PIN # Enable autodirection
    pin:
      number: GPIO17
      inverted: true
  - platform: gpio
    id: ENABLE_5V_PIN # Enable 5V pin for RS485 chip
    pin:
      number: GPIO16
      inverted: true

uart:
  - id: mod_bus
    rx_pin: GPIO21
    tx_pin: GPIO22
    baud_rate: 115200
    data_bits: 8
    stop_bits: 1
    parity: NONE

modbus:
  - uart_id: mod_bus
    id: modbus1
    send_wait_time: 50ms

modbus_controller:
  - id: mt
    address: 0x1
    modbus_id: modbus1
    setup_priority: -100    
    command_throttle: 50ms
    update_interval: 3s
    offline_skip_updates: 5

text_sensor:
  - platform: template
    name: "Software Version"
    id: software_version_text
    icon: mdi:factory
    update_interval: never
    entity_category: diagnostic
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 8

  - platform: template
    name: "Firmware Version"
    id: firmware_version_text
    icon: mdi:factory
    update_interval: never
    entity_category: diagnostic
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 9

  - platform: template
    name: "BMS Version"
    id: bms_version_text
    icon: mdi:factory
    update_interval: never
    entity_category: diagnostic
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 10

  - platform: template
    name: "Inverter State"
    lambda: |-
      switch (int(id(inverter_state).state)) {
        case 0: return std::string("Sleep");
        case 1: return std::string("Standby");
        case 2: return std::string("Charge");
        case 3: return std::string("Discharge");
        case 4: return std::string("Fault");
        case 5: return std::string("Idle");
        case 6: return std::string("AC bypass");
        default: return std::string("Unknown");
      };
    update_interval: 5s
    web_server:
      sorting_group_id: Info
      sorting_weight: 4

  - platform: wifi_info
    ip_address:
      name: ESPHome IP
      icon: mdi:ip
      web_server:
        sorting_group_id: Diagnostic
        sorting_weight: 4
    ssid:
      name: ESPHome SSID
      icon: mdi:wifi
      web_server:
        sorting_group_id: Diagnostic
        sorting_weight: 3

  - platform: version
    name: ESP Version
    hide_timestamp: true
    disabled_by_default: false
    icon: mdi:new-box
    entity_category: diagnostic
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 2

  - platform: modbus_controller
    id: wifi_status
    name: "Battery Wifi Status"
    modbus_controller_id: mt
    register_type: holding
    address: 30300
    raw_encode: NONE
    icon: mdi:wifi-alert
    entity_category: diagnostic
    skip_updates: 20
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0: mode_str = "Disconnected"; break;
        case 1: mode_str = "Connected"; break;
      }
      return mode_str;
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 20

  - platform: modbus_controller
    id: bt_status
    name: "BT Status"
    modbus_controller_id: mt
    register_type: holding
    address: 30301
    raw_encode: NONE
    icon: mdi:home-heart
    entity_category: diagnostic
    skip_updates: 20
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0: mode_str = "Off"; break;
        case 1: mode_str = "Active after boot"; break;
        case 2: mode_str = "Connected"; break;
        case 3: mode_str = "Active"; break;
      }
      return mode_str;
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 21

  - platform: modbus_controller
    id: cloud_status
    name: "Cloud Status"
    modbus_controller_id: mt
    register_type: holding
    address: 30302
    raw_encode: NONE
    icon: mdi:home-heart
    entity_category: diagnostic
    skip_updates: 20
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0: mode_str = "Disconnected"; break;
        case 1: mode_str = "Connected"; break;
      }
      return mode_str;
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 22

  - platform: modbus_controller
    id: power_restriction_discharge
    name: "Power restriction"
    modbus_controller_id: mt
    register_type: holding
    address: 41010
    raw_encode: NONE
    icon: mdi:home-heart
    entity_category: diagnostic
    skip_updates: 20
    lambda: |-
      uint16_t int_mode = (data[item->offset] << 8) + data[item->offset+1];
      ESP_LOGD("main","Parsed operation mode int : %d", int_mode);
      std::string mode_str;
      switch (int_mode) {
        case 0: mode_str = "Off"; break;
        case 1: mode_str = "800W limited"; break;
      }
      return mode_str;
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 23

button:
  - platform: restart
    name: "LilyGo Restart"
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 1

binary_sensor:
  - platform: status
    name: "ESP WiFi Status"
    id: "esp_wifi_status"
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 5

  - platform: modbus_controller
    name: "PLL Abnormal Restart"
    id: "pll_abnormal_restart"
    icon: mdi:flash-triangle
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x01
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 1

  - platform: modbus_controller
    name: "Overtemperature Limit"
    icon: mdi:thermometer-alert
    id: "overtemperature_limit"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x02
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 2

  - platform: modbus_controller
    name: "Low Temperature Limit"
    icon: mdi:thermometer-alert
    id: "low_temperature_limit"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x04
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 3

  - platform: modbus_controller
    name: "Fan Abnormal Warning"
    icon: mdi:fan-alert
    id: "fan_abnormal_warning"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x08
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 4

  - platform: modbus_controller
    name: "Low Battery SOC Warning"
    icon: mdi:battery-off-outline
    id: "low_battery_soc_warning"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x16
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 5

  - platform: modbus_controller
    name: "Output Overcurrent Warning"
    icon: mdi:flash-triangle
    id: "output_overcurrent_warning"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x32
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 6

  - platform: modbus_controller
    name: "Abnormal Line Sequence Detection"
    icon: mdi:flash-triangle
    id: "abnormal_line_sequence_detection"
    modbus_controller_id: mt
    register_type: holding
    address: 36000
    bitmask: 0x64
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 7

  - platform: modbus_controller
    name: "Wifi Abnormal"
    icon: mdi:wifi-alert
    id: "wifi_abnormal"
    modbus_controller_id: mt
    register_type: holding
    address: 36001
    bitmask: 0x01
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 8

  - platform: modbus_controller
    name: "BLE abnormal"
    icon: mdi:bluetooth-off
    id: "ble_abnormal"
    modbus_controller_id: mt
    register_type: holding
    address: 36001
    bitmask: 0x02
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 9

  - platform: modbus_controller
    name: "Network abnormal"
    icon: mdi:network-off
    id: "network_abnormal"
    modbus_controller_id: mt
    register_type: holding
    address: 36001
    bitmask: 0x04
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 10

  - platform: modbus_controller
    name: "CT connection abnormal"
    icon: mdi:robot-vacuum-alert
    id: "ct_connection_abnormal"
    modbus_controller_id: mt
    register_type: holding
    address: 36001
    bitmask: 0x08
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 11

  - platform: modbus_controller
    name: "Grid overvoltage"
    icon: mdi:flash-triangle
    id: "grid_overvoltage"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x01
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 12

  - platform: modbus_controller
    name: "Grid undervoltage"
    icon: mdi:flash-triangle-outline
    id: "grid_undervoltage"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x02
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 13

  - platform: modbus_controller
    name: "Grid overfrequency"
    icon: mdi:flash-triangle
    id: "grid_overfrequency"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x04
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 14

  - platform: modbus_controller
    name: "Grid underfrequency"
    icon: mdi:flash-triangle
    id: "grid_underfrequency"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x08
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 15

  - platform: modbus_controller
    name: "Grid peak voltage abnormal"
    icon: mdi:alert-plus
    id: "grid_peak_voltage_abnormal"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x10
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 16

  - platform: modbus_controller
    name: "Current Dcover"
    icon: mdi:flash-triangle
    id: "current_dcover"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x20
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 17

  - platform: modbus_controller
    name: "Voltage Dcover"
    icon: mdi:flash-triangle
    id: "voltage_dcover"
    modbus_controller_id: mt
    register_type: holding
    address: 36100
    bitmask: 0x40
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 18

  - platform: modbus_controller
    name: "BAT overvoltage"
    icon: mdi:flash-triangle
    id: "bat_overvoltage"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x01
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 19

  - platform: modbus_controller
    name: "BAT undervoltage"
    icon: mdi:flash-triangle-outline
    id: "bat_undervoltage"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x02
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 20

  - platform: modbus_controller
    name: "BAT overcurrent"
    icon: mdi:wave-undercurrent
    id: "bat_overcurrent"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x04
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 21

  - platform: modbus_controller
    name: "BAT low SOC"
    icon: mdi:battery-off-outline
    id: "bat_low_soc"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x08
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 22

  - platform: modbus_controller
    name: "BAT communication failure"
    icon: mdi:flash-triangle
    id: "bat_communication_failure"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x10
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 23

  - platform: modbus_controller
    name: "BMS protect"
    icon: mdi:flash-triangle
    id: "bms_protect"
    modbus_controller_id: mt
    register_type: holding
    address: 36101
    bitmask: 0x20
    web_server:
      sorting_group_id: Warnings
      sorting_weight: 24

sensor:
  - platform: modbus_controller
    id: inverter_state
    icon: mdi:state-machine
    modbus_controller_id: mt
    register_type: holding
    address: 35100
    value_type: U_WORD
    internal: true
    web_server:
      sorting_group_id: Info
      sorting_weight: 30

  - name: "Wifi Signal Strength"
    id: "wifi_signal_strength"
    icon: mdi:wifi
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 30303
    value_type: U_WORD
    unit_of_measurement: "dBm"
    accuracy_decimals: 0
    filters:
      - multiply: -1    
      - delta: 3.0    
    skip_updates: 99
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 7

  - platform: modbus_controller
    id: software_version
    icon: mdi:factory
    modbus_controller_id: mt
    register_type: holding
    address: 31100
    value_type: U_WORD
    accuracy_decimals: 0
    skip_updates: 149
    internal: true
    on_value:
      then:
        - lambda: |-
            int version = (int)x;
            char buf[5];
            sprintf(buf, "V%d", version);
            id(software_version_text).publish_state(buf);

  - platform: modbus_controller
    id: firmware_version
    icon: mdi:factory
    modbus_controller_id: mt
    register_type: holding
    address: 31101
    value_type: U_WORD
    accuracy_decimals: 0
    skip_updates: 149
    internal: true
    on_value:
      then:
        - lambda: |-
            int version = (int)x;
            char buf[5];
            sprintf(buf, "V%d", version);
            id(firmware_version_text).publish_state(buf);

  - platform: modbus_controller
    id: bms_version
    icon: mdi:factory
    modbus_controller_id: mt
    register_type: holding
    address: 31102
    value_type: U_WORD
    accuracy_decimals: 0
    skip_updates: 149
    internal: true
    on_value:
      then:
        - lambda: |-
            int version = (int)x;
            char buf[5];
            sprintf(buf, "V%d", version);
            id(bms_version_text).publish_state(buf);

  - name: "Battery Voltage"
    id: "battery_voltage"
    icon: mdi:sine-wave
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32100
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    accuracy_decimals: 2
    state_class: measurement
    filters:
      - multiply: 0.01
      - delta: 0.1 
    web_server:
      sorting_group_id: Info
      sorting_weight: 16

  - name: "Battery Current"
    id: "battery_current"
    icon: mdi:current-dc
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32101
    value_type: S_WORD
    unit_of_measurement: "A"
    device_class: current
    accuracy_decimals: 2
    state_class: measurement
    filters:
      - multiply: 0.01
      - throttle_average: 2s
      - delta: 0.05
    web_server:
      sorting_group_id: Info
      sorting_weight: 15

  - name: "Battery Power"
    id: "battery_power"
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32102
    value_type: S_DWORD
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    accuracy_decimals: 0
    #skip_updates: 4
    filters:
     - throttle: 1s    
    web_server:
      sorting_group_id: Info
      sorting_weight: 14

  - name: "Battery State Of Charge"
    id: "battery_soc"
    platform: modbus_controller
    device_class: battery
    state_class: measurement
    modbus_controller_id: mt
    register_type: holding
    address: 32104
    value_type: U_WORD
    unit_of_measurement: "%"
    accuracy_decimals: 0
    skip_updates: 59
    filters:
     - delta: 1.0
    web_server:
      sorting_group_id: Info
      sorting_weight: 5

  # Slow Sensor
  - name: "Battery Total Energy"
    id: "battery_total_energy"
    icon: mdi:battery-charging-100
    platform: modbus_controller
    device_class: energy_storage
    state_class: measurement
    modbus_controller_id: mt
    register_type: holding
    address: 32105
    value_type: U_WORD
    unit_of_measurement: "kWh"
    accuracy_decimals: 3
    filters:
      - multiply: 0.001
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 7

  - platform: template
    name: "Battery Remaining Capacity"
    id: "battery_remaining_capacity"
    icon: mdi:battery-arrow-down-outline
    unit_of_measurement: "kWh"
    accuracy_decimals: 2
    update_interval: 120s
    lambda: |-
      if (id(battery_total_energy).has_state() && id(battery_soc).has_state()) {
        float total_energy = id(battery_total_energy).state;
        float soc = id(battery_soc).state / 100.0;
        return roundf(total_energy * soc * 100) / 100; // Ensures two decimal places
      }
      return NAN;
    web_server:
      sorting_group_id: Info
      sorting_weight: 6

  - name: "AC Voltage"
    id: "ac_voltage"
    icon: mdi:current-ac
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32200
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
      - delta: 1.0
      - throttle: 2s 
    web_server:
      sorting_group_id: Info
      sorting_weight: 3

  - name: "AC Current"
    id: "ac_current"
    icon: mdi:current-ac
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32201
    value_type: U_WORD
    unit_of_measurement: "A"
    device_class: current
    state_class: measurement
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
      - throttle_average: 2s
    web_server:
      sorting_group_id: Info
      sorting_weight: 2

  # Slow Sensor
  - name: "AC Power"
    id: "ac_power"
    icon: mdi:flash
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 32202
    value_type: S_DWORD
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    accuracy_decimals: 0
    filters:
     - throttle: 1s    
    web_server:
      sorting_group_id: Info
      sorting_weight: 1

  - name: "Gesamte Ladung"
    id: "total_charging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33000
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 59
    web_server:
      sorting_group_id: Info
      sorting_weight: 12

  - name: "Gesamte Entladung"
    id: "total_discharging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33002
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 59
    web_server:
      sorting_group_id: Info
      sorting_weight: 13

  - name: "Gesamte Tagesladung"
    id: "daily_charging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33004
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 59
    web_server:
      sorting_group_id: Info
      sorting_weight: 8

  - name: "Gesamte Tagesentladung"
    id: "daily_discharging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33006
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 59
    web_server:
      sorting_group_id: Info
      sorting_weight: 9

  # Slow Sensor
  - name: "Gesamte Monatsladung"
    id: "monthly_charging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33008
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 10

  # Slow Sensor
  - name: "Gesamte Monatsentladung"
    id: "monthly_discharging_energy"
    icon: mdi:chart-bar
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 33010
    value_type: U_DWORD
    unit_of_measurement: "kWh"
    device_class: energy
    state_class: total_increasing
    accuracy_decimals: 2
    filters:
      - multiply: 0.01
    register_count: 2
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 11

  - name: "Internal Temperature"
    id: "internal_temperature"
    icon: mdi:thermometer
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 35000
    value_type: S_WORD
    unit_of_measurement: "°C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
      - delta: 0.5
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 19

  - name: "Internal MOS1 Temperature"
    id: "internal_mos1_temperature"
    icon: mdi:thermometer
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 35001
    value_type: S_WORD
    unit_of_measurement: "°C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
      - delta: 1.0
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 20

  # Slow Sensor
  - name: "Internal MOS2 Temperature"
    id: "internal_mos2_temperature"
    icon: mdi:thermometer
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 35002
    value_type: S_WORD
    unit_of_measurement: "°C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
      - delta: 1.0
    skip_updates: 149
    web_server:
      sorting_group_id: Info
      sorting_weight: 21

  - name: "Max. Cell Temperature"
    id: "max_cell_temperature"
    icon: mdi:thermometer
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 35010
    value_type: S_WORD
    unit_of_measurement: "°C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    skip_updates: 149
    filters:
     - multiply: 0.1
     - delta: 0.5
    web_server:
      sorting_group_id: Info
      sorting_weight: 22

  - name: "Min. Cell Temperature"
    id: "min_cell_temperature"
    icon: mdi:thermometer
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 35011
    value_type: S_WORD
    unit_of_measurement: "°C"
    device_class: temperature
    state_class: measurement
    accuracy_decimals: 1
    skip_updates: 149
    filters:
     - multiply: 0.1
     - delta: 0.5    
    web_server:
      sorting_group_id: Info
      sorting_weight: 23

  - name: "Max. Zellenspannung"
    icon: mdi:sine-wave
    id: max_cell_voltage
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 37007
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    accuracy_decimals: 2
    state_class: measurement
    filters:
      - multiply: 0.001
    skip_updates: 29
    web_server:
      sorting_group_id: Info
      sorting_weight: 24

  - name: "Min. Zellenspannung"
    icon: mdi:sine-wave
    id: min_cell_voltage
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 37008
    value_type: U_WORD
    unit_of_measurement: "V"
    device_class: voltage
    accuracy_decimals: 2
    state_class: measurement
    filters:
      - multiply: 0.001
    skip_updates: 29
    web_server:
      sorting_group_id: Info
      sorting_weight: 25

  - platform: template
    name: "Zellspannungsdifferenz"
    icon: mdi:sine-wave
    unit_of_measurement: "V"
    device_class: voltage
    accuracy_decimals: 3
    state_class: measurement
    lambda: |-
      if (isnan(id(max_cell_voltage).state) || isnan(id(min_cell_voltage).state)) {
        return NAN;
      }
      return id(max_cell_voltage).state - id(min_cell_voltage).state;
    web_server:
      sorting_group_id: Info
      sorting_weight: 26

  - platform: wifi_signal
    name: "ESP WiFi Signal Strength"
    icon: mdi:wifi
    id: "esp_wifi_signal_strength"
    update_interval: 300s
    filters:
      - delta: 5.0 
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 6

select:
  - name: "RS485 Control Mode"
    id: "rs485_control_mode"
    icon: mdi:connection
    platform: modbus_controller
    modbus_controller_id: mt
    address: 42000
    value_type: U_WORD
    optionsmap:
      "enable": 21930
      "disable": 21947
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 1

  - name: "Forcible Charge/Discharge"
    id: "forcible_chargedischarge"
    platform: modbus_controller
    modbus_controller_id: mt
    address: 42010
    value_type: U_WORD
    optionsmap:
      "stop": 0
      "charge": 1
      "discharge": 2
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 4

  - name: "Backup Function"
    id: "backup_function"
    platform: modbus_controller
    modbus_controller_id: mt
    address: 41200
    value_type: U_WORD
    optionsmap:
      "enable": 0
      "disable": 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 3

  - name: "User Work Mode"
    id: "user_work_mode"
    icon: mdi:auto-mode
    platform: modbus_controller
    modbus_controller_id: mt
    address: 43000
    value_type: U_WORD
    optionsmap:
      "manual": 0
      "anti-feed": 1
      "ai": 2
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 2

number:
  - name: "Charge To SOC"
    id: "charge_to_soc"
    icon: mdi:battery-charging-medium
    mode: box
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 42011
    value_type: U_WORD
    unit_of_measurement: "%"
    min_value: 12
    max_value: 100
    step: 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 9

  - name: "Forcible Charge Power"
    id: "forcible_charge_power"
    icon: mdi:tune-variant
    mode: box
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 42020
    value_type: U_WORD
    unit_of_measurement: "W"
    min_value: 0
    max_value: 2500
    step: 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 5

  - name: "Forcible Discharge Power"
    id: "forcible_discharge_power"
    icon: mdi:tune-variant
    mode: box
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 42021
    value_type: U_WORD
    unit_of_measurement: "W"
    min_value: 0
    max_value: 2500
    step: 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 6

  - name: "Charging Cutoff Capacity"
    id: "charging_cutoff_capacity"
    icon: mdi:battery-90
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 44000
    value_type: U_WORD
    unit_of_measurement: "%"
    min_value: 80
    max_value: 100
    multiply: 10
    web_server:
      sorting_group_id: Control
      sorting_weight: 7

  - name: "Discharging Cutoff Capacity"
    id: "discharging_cutoff_capacity"
    icon: mdi:battery-10
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 44001
    value_type: U_WORD
    unit_of_measurement: "%"
    min_value: 12
    max_value: 30
    multiply: 10
    web_server:
      sorting_group_id: Control
      sorting_weight: 8

  - name: "Max. Charge Power"
    id: "max_charge_power"
    icon: mdi:tune-variant
    mode: box
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 44002
    value_type: U_WORD
    unit_of_measurement: "W"
    min_value: 0
    max_value: 2500
    step: 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 10

  # Slow Sensor
  - name: "Max. Discharge Power"
    id: "max_discharge_power"
    icon: mdi:tune-variant
    mode: box
    platform: modbus_controller
    modbus_controller_id: mt
    register_type: holding
    address: 44003
    value_type: U_WORD
    unit_of_measurement: "W"
    min_value: 0
    max_value: 2500
    step: 1
    skip_updates: 4
    web_server:
      sorting_group_id: Control
      sorting_weight: 11

light:
  - platform: esp32_rmt_led_strip
    id: status_led
    name: "Status LED"
    chipset: WS2812
    pin: GPIO4
    num_leds: 1
    rgb_order: GRB
    web_server:
      sorting_group_id: Diagnostic
      sorting_weight: 24
    effects:
      - pulse:
          name: "Fast Blink Red"
          transition_length: 0.3s
          update_interval: 0.6s
          min_brightness: 20%
          max_brightness: 100%
      - pulse:
          name: "Fast Blink Purple"
          transition_length: 0.3s
          update_interval: 0.6s
          min_brightness: 20%
          max_brightness: 100%
      - pulse:
          name: "Fast Blink Blue"
          transition_length: 0.3s
          update_interval: 0.6s
          min_brightness: 20%
          max_brightness: 100%

globals:
  - id: last_led_status
    type: int
    restore_value: no
    initial_value: '0'

interval:
  - interval: 10s
    then:
      - lambda: |-
          int new_status = 0;
          if (!isnan(id(battery_soc).state) && id(wifi_signal_strength).state > -80) {
            new_status = 1; // grün
          } else if (isnan(id(battery_soc).state) && id(wifi_signal_strength).state < -80) {
            new_status = 2; // rot blinkend
          } else if (id(wifi_signal_strength).state < -80) {
            new_status = 3; // blau blinkend
          } else {
            new_status = 4; // lila blinkend
          }
          
          if (new_status != id(last_led_status)) {
            id(last_led_status) = new_status;
            
            // Status 1: grün
            if (id(last_led_status) == 1) {
              id(status_led)->turn_on()
                .set_red(0.0)
                .set_green(1.0)
                .set_blue(0.0)
                .set_brightness(0.3)
                .set_effect("none")
                .perform();
            }
            
            // Status 2: rot blinkend
            else if (id(last_led_status) == 2) {
              id(status_led)->turn_on()
                .set_red(1.0)
                .set_green(0.0)
                .set_blue(0.0)
                .set_effect("Fast Blink Red")
                .perform();
            }
            
            // Status 3: blau blinkend
            else if (id(last_led_status) == 3) {
              id(status_led)->turn_on()
                .set_red(0.0)
                .set_green(0.0)
                .set_blue(1.0)
                .set_effect("Fast Blink Blue")
                .perform();
            }
            
            // Status 4: lila blinkend
            else if (id(last_led_status) == 4) {
              id(status_led)->turn_on()
                .set_red(1.0)
                .set_green(0.0)
                .set_blue(1.0)
                .set_effect("Fast Blink Purple")
                .perform();
            }
          }
